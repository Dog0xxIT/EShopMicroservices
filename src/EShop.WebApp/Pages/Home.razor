@page "/"

@using EShop.Shared.ResponseModels
@using EShop.Shared.ResponseModels.Catalog
@using EShop.WebApp.Core.CoreHttpClient
@using EShop.WebApp.Models.Common
@using EShop.WebApp.Services.AuthenticationService
@using EShop.WebApp.Services.CatalogService
@using EShop.WebApp.Components.Common
@using EShop.WebApp.Components.Product

@inject IAuthenticationService AuthenticationService
@inject ICoreHttpClient CoreHttpClient
@inject ICatalogService CatalogService

<section class="bg-gray-50 py-8 antialiased dark:bg-gray-900 md:py-12">
    <div class="px-4 mx-auto max-w-screen-xl 2xl:px-0">
        <!-- Heading & Filters -->
        <div class="mb-4 space-y-4 items-end justify-between sm:flex sm:space-y-0 md:mb-8">
            <div>
                <Breadcrumb Items="@BreadcrumbItems"></Breadcrumb>
                <h2 class="mt-3 text-gray-900 text-xl font-semibold dark:text-white sm:text-2xl">Electronics</h2>
            </div>
            <div class="space-x-4 flex items-center">
                <button @onclick="() => _visibleFilterModal = true"
                        data-modal-toggle="filterModal" data-modal-target="filterModal" type="button"
                        class="border-gray-200 bg-white px-3 py-2 text-gray-900 flex w-full items-center justify-center rounded-lg border text-sm font-medium hover:bg-gray-100 hover:text-primary-700 focus:z-10 focus:outline-none focus:ring-4 focus:ring-gray-100 dark:border-gray-600 dark:bg-gray-800 dark:text-gray-400 sm:w-auto dark:hover:bg-gray-700 dark:hover:text-white dark:focus:ring-gray-700">
                    <svg class="-ms-0.5 me-2 h-4 w-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24"
                         height="24" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-width="2"
                              d="M18.796 4H5.204a1 1 0 0 0-.753 1.659l5.302 6.058a1 1 0 0 1 .247.659v4.874a.5.5 0 0 0 .2.4l3 2.25a.5.5 0 0 0 .8-.4v-7.124a1 1 0 0 1 .247-.659l5.302-6.059c.566-.646.106-1.658-.753-1.658Z" />
                    </svg>
                    Filters
                    <svg class="-me-0.5 ms-2 h-4 w-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24"
                         height="24" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="m19 9-7 7-7-7" />
                    </svg>
                </button>
                <button id="sortDropdownButton1" data-dropdown-toggle="dropdownSort1" type="button"
                        class="border-gray-200 bg-white px-3 py-2 text-gray-900 flex w-full items-center justify-center rounded-lg border text-sm font-medium hover:bg-gray-100 hover:text-primary-700 focus:z-10 focus:outline-none focus:ring-4 focus:ring-gray-100 dark:border-gray-600 dark:bg-gray-800 dark:text-gray-400 sm:w-auto dark:hover:bg-gray-700 dark:hover:text-white dark:focus:ring-gray-700">
                    <svg class="-ms-0.5 me-2 h-4 w-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24"
                         height="24" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M7 4v16M7 4l3 3M7 4 4 7m9-3h6l-6 6h6m-6.5 10 3.5-7 3.5 7M14 18h4" />
                    </svg>
                    Sort
                    <svg class="-me-0.5 ms-2 h-4 w-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24"
                         height="24" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="m19 9-7 7-7-7" />
                    </svg>
                </button>
                <div id="dropdownSort1"
                     class="w-40 divide-gray-100 bg-white z-50 hidden divide-y rounded-lg shadow dark:bg-gray-700"
                     data-popper-placement="bottom">
                    <ul class="p-2 text-gray-500 text-left text-sm font-medium dark:text-gray-400"
                        aria-labelledby="sortDropdownButton">
                        <li>
                            <a href="#"
                               class="px-3 py-2 text-gray-500 group inline-flex w-full items-center rounded-md text-sm hover:bg-gray-100 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white">
                                The most popular
                            </a>
                        </li>
                        <li>
                            <a href="#"
                               class="px-3 py-2 text-gray-500 group inline-flex w-full items-center rounded-md text-sm hover:bg-gray-100 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white">
                                Newest
                            </a>
                        </li>
                        <li>
                            <a href="#"
                               class="px-3 py-2 text-gray-500 group inline-flex w-full items-center rounded-md text-sm hover:bg-gray-100 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white">
                                Increasing price
                            </a>
                        </li>
                        <li>
                            <a href="#"
                               class="px-3 py-2 text-gray-500 group inline-flex w-full items-center rounded-md text-sm hover:bg-gray-100 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white">
                                Decreasing price
                            </a>
                        </li>
                        <li>
                            <a href="#"
                               class="px-3 py-2 text-gray-500 group inline-flex w-full items-center rounded-md text-sm hover:bg-gray-100 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white">
                                No. reviews
                            </a>
                        </li>
                        <li>
                            <a href="#"
                               class="px-3 py-2 text-gray-500 group inline-flex w-full items-center rounded-md text-sm hover:bg-gray-100 hover:text-gray-900 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white">
                                Discount %
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="mb-4">
            <CategorySection />
        </div>

        <div class="mb-4 gap-4 grid sm:grid-cols-2 md:mb-8 lg:grid-cols-3 xl:grid-cols-4">
            @foreach (var product in productPaginationResponse.Data)
            {
                <ProductCart ProductId="@product.Id"
                             ProductName="@product.Name"
                             Price="@product.Price.ToString("F3")"
                             Rating="3"
                             RatingCount="200" />
            }
        </div>

        <div class="w-full text-center">
            <button type="button"
                    class="border-gray-200 bg-white px-5 py-2.5 text-gray-900 rounded-lg border text-sm font-medium hover:bg-gray-100 hover:text-primary-700 focus:z-10 focus:outline-none focus:ring-4 focus:ring-gray-100 dark:border-gray-600 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white dark:focus:ring-gray-700">
                Show
                more
            </button>
        </div>
    </div>
    <!-- Filter modal -->
    <FilterModal @bind-Visible="@_visibleFilterModal" />
</section>

@code
{
    private List<BreadcrumbItem> BreadcrumbItems;
    private PaginationResponse<GetListProductResponse> productPaginationResponse;
    private bool _visibleFilterModal;

    protected override async Task OnInitializedAsync()
    {
        BreadcrumbItems = new List<BreadcrumbItem>
        {
            new()
            {
                Text = "Home",
                Url = "/",
            },
            new()
            {
                Text = "Products",
                Url = "/",
            },
            new()
            {
                Text = "Electronics",
                Url = "/",
            },
        };

        productPaginationResponse = new()
            {
                Data = new List<GetListProductResponse>()
            };

        var resultObject = await CatalogService.GetAllProducts();

        if (resultObject.ResultCode.Equals(ResultCode.Success))
        {
            productPaginationResponse = resultObject.Data;
        }
    }
}
