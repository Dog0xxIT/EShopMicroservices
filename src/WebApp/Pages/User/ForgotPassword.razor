@page "/forgot-password"

@layout EmptyLayout

@using EShop.WebApp.Models.Common
@using EShop.WebApp.Models.Enums
@using EShop.WebApp.States
@using WebApp.Core.RequestModels
@using WebApp.Services.IdentityService

@inject IIdentityService IdentityService
@inject AlertState AlertState
@inject NavigationManager NavigationManager

<div class="d-flex flex-column align-items-center justify-content-center rounded-4 border-secondary-subtle mt-5 p-3 bg-body-tertiary mx-auto border shadow"
     style="width: 40%;">

    <h2 class="mb-4 text-primary text-center">Forgot Password</h2>

    <TelerikForm Model="@_forgotPasswordRequest"
                 Class="w-100"
                 OnValidSubmit="@ValidSubmit"
                 ButtonsLayout="FormButtonsLayout.Stretch">
        <FormValidation>
            <DataAnnotationsValidator></DataAnnotationsValidator>
        </FormValidation>
        <FormItems>
            <FormAutoGeneratedItems></FormAutoGeneratedItems>
        </FormItems>
        <FormButtons>
            <TelerikButton Class="mt-3" Rounded="@ThemeConstants.Button.Rounded.Full">Forgot password</TelerikButton>
        </FormButtons>
    </TelerikForm>

    <p class="mt-3 text-center">
        <a href="/" class="text-secondary">Back to home page</a>
    </p>
</div>

@code
{
    private ForgotPasswordRequest _forgotPasswordRequest;

    protected override void OnInitialized()
    {
        _forgotPasswordRequest = new();
    }

    private async Task ValidSubmit()
    {
        var resultObject = await IdentityService.ForgotPassword(_forgotPasswordRequest);
        if (resultObject.ResultCode.Equals(ResultCode.Success))
        {
            AlertState.AddMessage(new AlertItem
                {
                    Message = "Please check email",
                    Title = "Success",
                    Type = AlertType.Success
                });
            NavigationManager.NavigateTo("/");
            return;
        }
        AlertState.AddMessage(new AlertItem
            {
                Message = resultObject.Messages,
                Title = "Error",
                Type = AlertType.Danger
            });
    }
}
