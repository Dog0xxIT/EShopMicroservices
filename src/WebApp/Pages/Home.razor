@page "/"

@using WebApp.Services.CatalogService
@using WebApp.Components.Common

@inject ICatalogService _catalogService
@inject IBasketService _basketService
@inject NavigationManager _navManager

<TelerikLoaderContainer Visible="@_visibleLoader"></TelerikLoaderContainer>

<TelerikGridLayout ColumnSpacing="2%">
    <GridLayoutColumns>
        <GridLayoutColumn Width="15%"></GridLayoutColumn>
        <GridLayoutColumn Width="85%"></GridLayoutColumn>
    </GridLayoutColumns>

    <GridLayoutItems>
        <GridLayoutItem>
            <TelerikPanelBar Data="@_categoryList"
                             ExpandMode="PanelBarExpandMode.Single"
                             OnItemClick="OnClickCategory">
                <PanelBarBindings>
                    <PanelBarBinding ParentIdField="@nameof(GetAllCategoriesResponse.ParentId)"
                                     TextField="@nameof(GetAllCategoriesResponse.Name)"
                                     ItemsField="@nameof(GetAllCategoriesResponse.Childs)"
                                     IconField="@nameof(GetAllCategoriesResponse.ThumbnailUrl)"
                                     HasChildrenField="@nameof(GetAllCategoriesResponse.HasChild)"
                                     IdField="@nameof(GetAllCategoriesResponse.Id)"></PanelBarBinding>
                </PanelBarBindings>
            </TelerikPanelBar>
        </GridLayoutItem>

        <GridLayoutItem>
            <TelerikGridLayout RowSpacing="40px" ColumnSpacing="1%">
                <GridLayoutColumns>
                    <GridLayoutColumn Width="15%"></GridLayoutColumn>
                    <GridLayoutColumn Width="15%"></GridLayoutColumn>
                    <GridLayoutColumn Width="15%"></GridLayoutColumn>
                    <GridLayoutColumn Width="15%"></GridLayoutColumn>
                    <GridLayoutColumn Width="15%"></GridLayoutColumn>
                    <GridLayoutColumn Width="15%"></GridLayoutColumn>
                </GridLayoutColumns>

                <GridLayoutItems>
                    <GridLayoutItem Row="1" Column="1" ColumnSpan="6">
                        <TelerikToolBar>
                            <ToolBarTemplateItem>
                                <div class="my-2">
                                    <span>Min Price</span>
                                    <TelerikNumericTextBox @bind-Value="@_minPrice"></TelerikNumericTextBox>

                                    <span class="ms-2">Max Price</span>
                                    <TelerikNumericTextBox @bind-Value="@_maxPrice"></TelerikNumericTextBox>
                                </div>
                            </ToolBarTemplateItem>

                            <ToolBarSpacer />

                            <ToolBarTemplateItem>
                                <div class="my-2">
                                    <span>Sort by</span>
                                    <TelerikDropDownList Data="@_sortOptions"
                                                         Width="200px"
                                                         Value="@SelectedSortOption"
                                                         ValueChanged="@((string v) => OnSortOptionChange(v))"
                                                         Rounded="@ThemeConstants.DropDownList.Rounded.Large">
                                    </TelerikDropDownList>
                                </div>
                            </ToolBarTemplateItem>
                        </TelerikToolBar>
                    </GridLayoutItem>

                    @foreach (var product in _productPaginationResponse.Data)
                    {
                        <GridLayoutItem>
                            >
                            <TelerikCard Class="border-primary-subtle rounded-4 border">
                                <div class="m-auto" style="cursor:pointer;"
                                     @onclick=@(() => _navManager.NavigateTo($"/products/{product.Id}"))>
                                    <CardImage Src="@product.ThumbnailUrl"
                                               Width="120px"
                                               Height="120px"
                                               Class="border-secondary-subtle m-auto border"></CardImage>
                                </div>

                                <CardBody>
                                    <div style="height:60px;cursor:pointer;" @onclick=@(() => _navManager.NavigateTo($"/products/{product.Id}"))>
                                        <!-- Truncate product name if it exceeds 20 characters -->
                                        @if (product.Name.Length > 55)
                                        {
                                            @($"{product.Name.Substring(0, 55)}...")
                                        }
                                        else
                                        {
                                            @product.Name
                                        }
                                    </div>

                                    <CardSeparator></CardSeparator>

                                    <div class="d-flex justify-content-around mt-2">
                                        <Rating Max="5" Star="@((int)product.RatingAverage)"></Rating>
                                        <CardSubTitle>Buyer :@product.TotalBuyer</CardSubTitle>
                                    </div>

                                    <CardSeparator></CardSeparator>

                                    <CardTitle>$ @product.Price</CardTitle>
                                </CardBody>
                                <CardActions Layout="@CardActionsLayout.Stretch">
                                    <TelerikButton OnClick=@(() => OnClickAddToCartButton(product.Id))
                                                   Icon="@SvgIcon.Cart"
                                                   Rounded="@ThemeConstants.Button.Rounded.Full">
                                        Add To Cart
                                    </TelerikButton>
                                </CardActions>
                            </TelerikCard>
                        </GridLayoutItem>
                    }
                </GridLayoutItems>
            </TelerikGridLayout>
            @if (_productPaginationResponse.Data.Any() && _productPaginationResponse?.Meta != null)
            {
                <TelerikPager Class="mt-3 me-5"
                              Total="@_productPaginationResponse.Meta.Total"
                              PageSize="@_productPaginationResponse.Meta.PerPage"
                              Page="@_productPaginationResponse.Meta.CurrentPage"
                              PageChanged=@(async (page) => await PageChangedHandler(page))></TelerikPager>
            }
        </GridLayoutItem>
    </GridLayoutItems>
</TelerikGridLayout>